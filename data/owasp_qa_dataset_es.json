[
    {
        "question": "¿Qué es el Control de Acceso Roto?",
        "context": "Descripción El control de acceso implementa el cumplimiento de política de modo que los usuarios no pueden actuar fuera de los permisos que le fueron asignados. Las fallas generalmente conducen a la divulgación de información no autorizada, la modificación o la destrucción de todos los datos o la ejecución de una función de negocio fuera de los límites del usuario.",
        "answers": [
            {
                "text": "El control de acceso implementa el cumplimiento de política de modo que los usuarios no pueden actuar fuera de los permisos que le fueron asignados",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Cómo prevenir el Control de Acceso Roto?",
        "context": "Cómo se previene El control de acceso solo es efectivo si es implementado en el servidor (server-side) o en la API (caso serverless), donde el atacante no puede modificarlo ni manipular metadatos. A excepción de los recursos públicos, denegar por defecto. Implemente mecanismos de control de acceso una única vez y reutilícelos en toda la aplicación, incluyendo la minimización del uso de CORS.",
        "answers": [
            {
                "text": "El control de acceso solo es efectivo si es implementado en el servidor (server-side) o en la API (caso serverless), donde el atacante no puede modificarlo ni manipular metadatos",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Qué impacto tiene el Control de Acceso Roto en la seguridad?",
        "context": "Descripción El control de acceso implementa el cumplimiento de política de modo que los usuarios no pueden actuar fuera de los permisos que le fueron asignados. Las fallas generalmente conducen a la divulgación de información no autorizada, la modificación o la destrucción de todos los datos o la ejecución de una función de negocio fuera de los límites del usuario.",
        "answers": [
            {
                "text": "El control de acceso implementa el cumplimiento de política de modo que los usuarios no pueden actuar fuera de los permisos que le fueron asignados",
                "start": 0
            }
        ]
    },
    {
        "question": "Dame un ejemplo de el Control de Acceso Roto.",
        "context": "Ejemplos de escenarios de ataque Escenario #1: La aplicación utiliza datos no verificados en una llamada SQL que accede a información de una cuenta: pstmt.setString(1, request.getParameter(\"acct\")); ResultSet results = pstmt.executeQuery( ); Un atacante simplemente modifica el parámetro 'acct' en el navegador para enviar el número de cuenta que desee. Si no es verificado correctamente, el atacante puede acceder a la cuenta de cualquier usuario. https://example.",
        "answers": [
            {
                "text": "Escenario #1: La aplicación utiliza datos no verificados en una llamada SQL que accede a información de una cuenta: pstmt",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Qué causas tiene el Control de Acceso Roto?",
        "context": "Descripción El control de acceso implementa el cumplimiento de política de modo que los usuarios no pueden actuar fuera de los permisos que le fueron asignados. Las fallas generalmente conducen a la divulgación de información no autorizada, la modificación o la destrucción de todos los datos o la ejecución de una función de negocio fuera de los límites del usuario.",
        "answers": [
            {
                "text": "El control de acceso implementa el cumplimiento de política de modo que los usuarios no pueden actuar fuera de los permisos que le fueron asignados",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Qué es Fallos Criptográficos?",
        "context": "Descripción Lo primero es determinar las necesidades de protección de los datos en tránsito y en reposo. Por ejemplo, contraseñas, números de tarjetas de crédito, registros médicos, información personal y secretos comerciales requieren protección adicional, principalmente si están sujetos a leyes de privacidad (por ejemplo, el Reglamento General de Protección de Datos -GDPR- de la UE), o regulaciones, (por ejemplo, protección de datos financieros como el Estándar de Seguridad de Datos de PCI -PCI DSS-).",
        "answers": [
            {
                "text": "Lo primero es determinar las necesidades de protección de los datos en tránsito y en reposo",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Cómo prevenir Fallos Criptográficos?",
        "context": "Cómo se previene Haga lo siguiente como mínimo, y consulte las referencias: Clasifique los datos procesados, almacenados o transmitidos por una aplicación. Identifique qué datos son confidenciales de acuerdo con las leyes de privacidad, los requisitos reglamentarios o las necesidades comerciales. No almacene datos sensibles innecesariamente. Descártelos lo antes posible o utilice una utilización de tokens compatible con PCI DSS o incluso el truncamiento. Los datos que no se conservan no se pueden robar.",
        "answers": [
            {
                "text": "Haga lo siguiente como mínimo, y consulte las referencias: Clasifique los datos procesados, almacenados o transmitidos por una aplicación",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Qué impacto tiene Fallos Criptográficos en la seguridad?",
        "context": "Descripción Lo primero es determinar las necesidades de protección de los datos en tránsito y en reposo. Por ejemplo, contraseñas, números de tarjetas de crédito, registros médicos, información personal y secretos comerciales requieren protección adicional, principalmente si están sujetos a leyes de privacidad (por ejemplo, el Reglamento General de Protección de Datos -GDPR- de la UE), o regulaciones, (por ejemplo, protección de datos financieros como el Estándar de Seguridad de Datos de PCI -PCI DSS-).",
        "answers": [
            {
                "text": "Lo primero es determinar las necesidades de protección de los datos en tránsito y en reposo",
                "start": 0
            }
        ]
    },
    {
        "question": "Dame un ejemplo de Fallos Criptográficos.",
        "context": "Ejemplos de escenarios de ataque Escenario #1: Una aplicación cifra los números de tarjetas de crédito en una base de datos mediante el cifrado automático de la base de datos. Sin embargo, estos datos se descifran automáticamente cuando se recuperan, lo que permite que por una falla de inyección SQL se recuperen números de tarjetas de crédito en texto sin cifrar. Escenario #2: Un sitio no utiliza ni aplica TLS para todas sus páginas o admite un cifrado débil.",
        "answers": [
            {
                "text": "Escenario #1: Una aplicación cifra los números de tarjetas de crédito en una base de datos mediante el cifrado automático de la base de datos",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Qué causas tiene Fallos Criptográficos?",
        "context": "Descripción Lo primero es determinar las necesidades de protección de los datos en tránsito y en reposo. Por ejemplo, contraseñas, números de tarjetas de crédito, registros médicos, información personal y secretos comerciales requieren protección adicional, principalmente si están sujetos a leyes de privacidad (por ejemplo, el Reglamento General de Protección de Datos -GDPR- de la UE), o regulaciones, (por ejemplo, protección de datos financieros como el Estándar de Seguridad de Datos de PCI -PCI DSS-).",
        "answers": [
            {
                "text": "Lo primero es determinar las necesidades de protección de los datos en tránsito y en reposo",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Qué es Inyección?",
        "context": "Descripción Una aplicación es vulnerable a estos tipos de ataque cuando: Los datos proporcionados por el usuario no son validados, filtrados ni sanitizados por la aplicación. Se invocan consultas dinámicas o no parametrizadas, sin codificar los parámetros de forma acorde al contexto. Se utilizan datos dañinos dentro de los parámetros de búsqueda en consultas Object-Relational Mapping (ORM), para extraer registros adicionales sensibles.",
        "answers": [
            {
                "text": "Una aplicación es vulnerable a estos tipos de ataque cuando: Los datos proporcionados por el usuario no son validados, filtrados ni sanitizados por la aplicación",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Cómo prevenir Inyección?",
        "context": "Cómo se previene Prevenir inyecciones requiere separar los datos de los comandos y las consultas. La opción preferida es utilizar una API segura, que evite el uso de un intérprete por completo y proporcione una interfaz parametrizada o utilizar una herramienta de ORM. Nota:: Incluso cuando se parametrizan, los procedimientos almacenados pueden introducir una inyección SQL si el procedimiento PL/SQL o T-SQL concatena consultas y datos, o se ejecutan parámetros utilizando EXECUTE IMMEDIATE o exec().",
        "answers": [
            {
                "text": "Prevenir inyecciones requiere separar los datos de los comandos y las consultas",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Qué impacto tiene Inyección en la seguridad?",
        "context": "Descripción Una aplicación es vulnerable a estos tipos de ataque cuando: Los datos proporcionados por el usuario no son validados, filtrados ni sanitizados por la aplicación. Se invocan consultas dinámicas o no parametrizadas, sin codificar los parámetros de forma acorde al contexto. Se utilizan datos dañinos dentro de los parámetros de búsqueda en consultas Object-Relational Mapping (ORM), para extraer registros adicionales sensibles.",
        "answers": [
            {
                "text": "Una aplicación es vulnerable a estos tipos de ataque cuando: Los datos proporcionados por el usuario no son validados, filtrados ni sanitizados por la aplicación",
                "start": 0
            }
        ]
    },
    {
        "question": "Dame un ejemplo de Inyección.",
        "context": "Ejemplos de escenarios de ataque Escenario #1: Una aplicación usa datos no confiables en la construcción de la siguiente sentencia SQL vulnerable: String query = \"SELECT \\* FROM accounts WHERE custID='\" + request.getParameter(\"id\") + \"'\"; Escenario #2: Del mismo modo, la confianza total de una aplicación en frameworks puede resultar en consultas que siguen siendo vulnerables a inyecciones, (por ejemplo: Hibernate Query Language (HQL)): Query HQLQuery = session.",
        "answers": [
            {
                "text": "Escenario #1: Una aplicación usa datos no confiables en la construcción de la siguiente sentencia SQL vulnerable: String query = \"SELECT \\* FROM accounts WHERE custID='\" + request",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Qué causas tiene Inyección?",
        "context": "Descripción Una aplicación es vulnerable a estos tipos de ataque cuando: Los datos proporcionados por el usuario no son validados, filtrados ni sanitizados por la aplicación. Se invocan consultas dinámicas o no parametrizadas, sin codificar los parámetros de forma acorde al contexto. Se utilizan datos dañinos dentro de los parámetros de búsqueda en consultas Object-Relational Mapping (ORM), para extraer registros adicionales sensibles.",
        "answers": [
            {
                "text": "Una aplicación es vulnerable a estos tipos de ataque cuando: Los datos proporcionados por el usuario no son validados, filtrados ni sanitizados por la aplicación",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Qué es  el Diseño Inseguro?",
        "context": "Descripción El diseño inseguro es una categoría amplia que representa diferentes debilidades, expresadas como \"diseño de control faltante o ineficaz\". El diseño inseguro no es la fuente de las otras 10 categorías. Existe una diferencia entre un diseño inseguro y una implementación insegura. Distinguimos entre fallas de diseño y defectos de implementación por un motivo, difieren en la causa raíz y remediaciones.",
        "answers": [
            {
                "text": "El diseño inseguro es una categoría amplia que representa diferentes debilidades, expresadas como \"diseño de control faltante o ineficaz\"",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Cómo prevenir  el Diseño Inseguro?",
        "context": "Cómo se previene Establezca y use un ciclo de desarrollo seguro apoyado en Profesionales en Seguridad de Aplicaciones para ayudarlo a evaluar y diseñar la seguridad y controles relacionados con la privacidad. Establezca y utilice un catálogo de patrones de diseño seguros o componentes de \"camino pavimentado\" listos para ser utilizados. Utilice el modelado de amenazas para flujos críticos de autenticación, control de acceso, lógica de negocio y todo clave.",
        "answers": [
            {
                "text": "Establezca y use un ciclo de desarrollo seguro apoyado en Profesionales en Seguridad de Aplicaciones para ayudarlo a evaluar y diseñar la seguridad y controles relacionados con la privacidad",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Qué impacto tiene  el Diseño Inseguro en la seguridad?",
        "context": "Descripción El diseño inseguro es una categoría amplia que representa diferentes debilidades, expresadas como \"diseño de control faltante o ineficaz\". El diseño inseguro no es la fuente de las otras 10 categorías. Existe una diferencia entre un diseño inseguro y una implementación insegura. Distinguimos entre fallas de diseño y defectos de implementación por un motivo, difieren en la causa raíz y remediaciones.",
        "answers": [
            {
                "text": "El diseño inseguro es una categoría amplia que representa diferentes debilidades, expresadas como \"diseño de control faltante o ineficaz\"",
                "start": 0
            }
        ]
    },
    {
        "question": "Dame un ejemplo de  el Diseño Inseguro.",
        "context": "Ejemplos de Escenarios de Ataque Escenario #1: Un flujo de trabajo de recuperación de credenciales puede incluir \"preguntas y respuestas\", lo cual está prohibido por NIST 800-63b, OWASP ASVS y OWASP Top 10. No se puede confiar en preguntas y respuestas como evidencia de identidad ya que más de una persona puede conocer las respuestas. Dicho código debe eliminarse y reemplazarse por un diseño más seguro.",
        "answers": [
            {
                "text": "Escenario #1: Un flujo de trabajo de recuperación de credenciales puede incluir \"preguntas y respuestas\", lo cual está prohibido por NIST 800-63b, OWASP ASVS y OWASP Top 10",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Qué causas tiene  el Diseño Inseguro?",
        "context": "Descripción El diseño inseguro es una categoría amplia que representa diferentes debilidades, expresadas como \"diseño de control faltante o ineficaz\". El diseño inseguro no es la fuente de las otras 10 categorías. Existe una diferencia entre un diseño inseguro y una implementación insegura. Distinguimos entre fallas de diseño y defectos de implementación por un motivo, difieren en la causa raíz y remediaciones.",
        "answers": [
            {
                "text": "El diseño inseguro es una categoría amplia que representa diferentes debilidades, expresadas como \"diseño de control faltante o ineficaz\"",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Qué es la Mala Configuración de Seguridad?",
        "context": "Descripción La aplicación puede ser vulnerable si: Le falta el hardening de seguridad adecuado en cualquier parte del stack tecnológico o permisos configurados incorrectamente en los servicios en la nube. Tiene funciones innecesarias habilitadas o instaladas (puertos, servicios, páginas, cuentas o privilegios innecesarios, por ejemplo). Las cuentas predeterminadas y sus contraseñas aún están habilitadas y sin cambios.",
        "answers": [
            {
                "text": "La aplicación puede ser vulnerable si: Le falta el hardening de seguridad adecuado en cualquier parte del stack tecnológico o permisos configurados incorrectamente en los servicios en la nube",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Cómo prevenir la Mala Configuración de Seguridad?",
        "context": "Cómo se previene Deben implementarse procesos de instalación seguros, incluyendo: Un proceso de hardening repetible agiliza y facilita la implementación de otro entorno que esté debidamente inaccesible. Los entornos de desarrollo, control de calidad y producción deben configurarse de forma idéntica, con diferentes credenciales utilizadas en cada uno. Este proceso debe automatizarse para minimizar el esfuerzo necesario para configurar un nuevo entorno seguro.",
        "answers": [
            {
                "text": "Deben implementarse procesos de instalación seguros, incluyendo: Un proceso de hardening repetible agiliza y facilita la implementación de otro entorno que esté debidamente inaccesible",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Qué impacto tiene la Mala Configuración de Seguridad en la seguridad?",
        "context": "Descripción La aplicación puede ser vulnerable si: Le falta el hardening de seguridad adecuado en cualquier parte del stack tecnológico o permisos configurados incorrectamente en los servicios en la nube. Tiene funciones innecesarias habilitadas o instaladas (puertos, servicios, páginas, cuentas o privilegios innecesarios, por ejemplo). Las cuentas predeterminadas y sus contraseñas aún están habilitadas y sin cambios.",
        "answers": [
            {
                "text": "La aplicación puede ser vulnerable si: Le falta el hardening de seguridad adecuado en cualquier parte del stack tecnológico o permisos configurados incorrectamente en los servicios en la nube",
                "start": 0
            }
        ]
    },
    {
        "question": "Dame un ejemplo de la Mala Configuración de Seguridad.",
        "context": "Ejemplos de escenarios de ataque Escenario #1: El servidor de aplicaciones contiene aplicaciones de ejemplo que no se eliminan del servidor de producción. Estas aplicaciones de ejemplo poseen fallas de seguridad conocidas que los atacantes utilizan para comprometer el servidor. Supongamos que una de estas aplicaciones es la consola de administración y no se modificaron las cuentas predeterminadas. En ese caso, el atacante inicia sesión con las contraseñas predeterminadas y toma el control.",
        "answers": [
            {
                "text": "Escenario #1: El servidor de aplicaciones contiene aplicaciones de ejemplo que no se eliminan del servidor de producción",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Qué causas tiene la Mala Configuración de Seguridad?",
        "context": "Descripción La aplicación puede ser vulnerable si: Le falta el hardening de seguridad adecuado en cualquier parte del stack tecnológico o permisos configurados incorrectamente en los servicios en la nube. Tiene funciones innecesarias habilitadas o instaladas (puertos, servicios, páginas, cuentas o privilegios innecesarios, por ejemplo). Las cuentas predeterminadas y sus contraseñas aún están habilitadas y sin cambios.",
        "answers": [
            {
                "text": "La aplicación puede ser vulnerable si: Le falta el hardening de seguridad adecuado en cualquier parte del stack tecnológico o permisos configurados incorrectamente en los servicios en la nube",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Qué es Vulnerable and Outdated Components?",
        "context": "Descripción Usted probablemente sea vulnerable: Si no conoce las versiones de todos los componentes que utiliza (tanto en el cliente como en el servidor). Esto incluye los componentes que usa directamente, así como las dependencias anidadas. Si el software es vulnerable, carece de soporte o no está actualizado.",
        "answers": [
            {
                "text": "Usted probablemente sea vulnerable: Si no conoce las versiones de todos los componentes que utiliza (tanto en el cliente como en el servidor)",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Cómo prevenir Vulnerable and Outdated Components?",
        "context": "Cómo se previene Debe existir un proceso de administración de parches que: Elimine las dependencias que no son utilizadas, funcionalidades, componentes, archivos y documentación innecesarios. Realice un inventario continuo de las versiones de los componentes en el cliente y en el servidor (por ejemplo, frameworks, bibliotecas) y sus dependencias utilizando herramientas como: versions, OWASP Dependency Check, retire.js, etc.",
        "answers": [
            {
                "text": "Debe existir un proceso de administración de parches que: Elimine las dependencias que no son utilizadas, funcionalidades, componentes, archivos y documentación innecesarios",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Qué impacto tiene Vulnerable and Outdated Components en la seguridad?",
        "context": "Descripción Usted probablemente sea vulnerable: Si no conoce las versiones de todos los componentes que utiliza (tanto en el cliente como en el servidor). Esto incluye los componentes que usa directamente, así como las dependencias anidadas. Si el software es vulnerable, carece de soporte o no está actualizado.",
        "answers": [
            {
                "text": "Usted probablemente sea vulnerable: Si no conoce las versiones de todos los componentes que utiliza (tanto en el cliente como en el servidor)",
                "start": 0
            }
        ]
    },
    {
        "question": "Dame un ejemplo de Vulnerable and Outdated Components.",
        "context": "Ejemplos de escenarios de ataque Escenario #1: Los componentes normalmente se ejecutan con los mismos privilegios que la propia aplicación, por lo que las fallas en cualquier componente pueden tener un impacto grave. Tales fallas pueden ser accidentales (por ejemplo, error de codificación) o intencionales (por ejemplo, una puerta trasera en un componente).",
        "answers": [
            {
                "text": "Escenario #1: Los componentes normalmente se ejecutan con los mismos privilegios que la propia aplicación, por lo que las fallas en cualquier componente pueden tener un impacto grave",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Qué causas tiene Vulnerable and Outdated Components?",
        "context": "Descripción Usted probablemente sea vulnerable: Si no conoce las versiones de todos los componentes que utiliza (tanto en el cliente como en el servidor). Esto incluye los componentes que usa directamente, así como las dependencias anidadas. Si el software es vulnerable, carece de soporte o no está actualizado.",
        "answers": [
            {
                "text": "Usted probablemente sea vulnerable: Si no conoce las versiones de todos los componentes que utiliza (tanto en el cliente como en el servidor)",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Qué es Identification and Authentication Failures?",
        "context": "Descripción La confirmación de la identidad, la autenticación y la gestión de sesiones del usuario son fundamentales para protegerse contra ataques relacionados con la autenticación. Puede haber debilidades de autenticación si la aplicación: Permite ataques automatizados como la reutilización de credenciales conocidas, donde el atacante posee una lista de pares de usuario y contraseña válidos. Permite ataques de fuerza bruta u otros ataques automatizados.",
        "answers": [
            {
                "text": "La confirmación de la identidad, la autenticación y la gestión de sesiones del usuario son fundamentales para protegerse contra ataques relacionados con la autenticación",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Cómo prevenir Identification and Authentication Failures?",
        "context": "Cómo se previene Cuando sea posible, implemente la autenticación multi-factor para evitar ataques automatizados de reutilización de credenciales conocidas, fuerza bruta y reúso de credenciales robadas. No incluya o implemente en su software credenciales por defecto, particularmente para usuarios administradores. Implemente un control contra contraseñas débiles, tal como verificar que una nueva contraseña o la utilizada en el cambio de contraseña no esté incluida en la lista de las 10,000 peores contraseñas.",
        "answers": [
            {
                "text": "Cuando sea posible, implemente la autenticación multi-factor para evitar ataques automatizados de reutilización de credenciales conocidas, fuerza bruta y reúso de credenciales robadas",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Qué impacto tiene Identification and Authentication Failures en la seguridad?",
        "context": "Descripción La confirmación de la identidad, la autenticación y la gestión de sesiones del usuario son fundamentales para protegerse contra ataques relacionados con la autenticación. Puede haber debilidades de autenticación si la aplicación: Permite ataques automatizados como la reutilización de credenciales conocidas, donde el atacante posee una lista de pares de usuario y contraseña válidos. Permite ataques de fuerza bruta u otros ataques automatizados.",
        "answers": [
            {
                "text": "La confirmación de la identidad, la autenticación y la gestión de sesiones del usuario son fundamentales para protegerse contra ataques relacionados con la autenticación",
                "start": 0
            }
        ]
    },
    {
        "question": "Dame un ejemplo de Identification and Authentication Failures.",
        "context": "Ejemplos de escenarios de ataque Escenario #1: Relleno de credenciales, el uso de listas de contraseñas conocidas, es un ataque común. Supongamos que una aplicación no se implementa protección automatizada de relleno de credenciales. En ese caso, la aplicación puede usarse como oráculo de contraseñas para determinar si las credenciales son válidas. Escenario #2: La mayoría de los ataques de autenticación ocurren debido al uso de contraseñas como único factor.",
        "answers": [
            {
                "text": "Escenario #1: Relleno de credenciales, el uso de listas de contraseñas conocidas, es un ataque común",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Qué causas tiene Identification and Authentication Failures?",
        "context": "Descripción La confirmación de la identidad, la autenticación y la gestión de sesiones del usuario son fundamentales para protegerse contra ataques relacionados con la autenticación. Puede haber debilidades de autenticación si la aplicación: Permite ataques automatizados como la reutilización de credenciales conocidas, donde el atacante posee una lista de pares de usuario y contraseña válidos. Permite ataques de fuerza bruta u otros ataques automatizados.",
        "answers": [
            {
                "text": "La confirmación de la identidad, la autenticación y la gestión de sesiones del usuario son fundamentales para protegerse contra ataques relacionados con la autenticación",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Qué es Software and Data Integrity Failures?",
        "context": "Descripción Los fallos de integridad del software y de los datos están relacionados con código e infraestructura no protegidos contra alteraciones (integridad). Ejemplos de esto son cuando una aplicación depende de plugins, bibliotecas o módulos de fuentes, repositorios o redes de entrega de contenidos (CDN) no confiables. Un pipeline CI/CD inseguro puede conducir a accesos no autorizados, la inclusión de código malicioso o el compromiso del sistema en general.",
        "answers": [
            {
                "text": "Los fallos de integridad del software y de los datos están relacionados con código e infraestructura no protegidos contra alteraciones (integridad)",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Cómo prevenir Software and Data Integrity Failures?",
        "context": "Cómo se previene Utilice firmas digitales o mecanismos similares para verificar que el software o datos provienen efectivamente de la fuente esperada y no fueron alterados. Asegúrese que las bibliotecas y dependencias, tales como npm o maven son utilizadas desde repositorios confiables. Si su perfil de riesgo es alto, considere alojarlas en un repositorio interno cuyo contenido ha sido previamente analizado.",
        "answers": [
            {
                "text": "Utilice firmas digitales o mecanismos similares para verificar que el software o datos provienen efectivamente de la fuente esperada y no fueron alterados",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Qué impacto tiene Software and Data Integrity Failures en la seguridad?",
        "context": "Descripción Los fallos de integridad del software y de los datos están relacionados con código e infraestructura no protegidos contra alteraciones (integridad). Ejemplos de esto son cuando una aplicación depende de plugins, bibliotecas o módulos de fuentes, repositorios o redes de entrega de contenidos (CDN) no confiables. Un pipeline CI/CD inseguro puede conducir a accesos no autorizados, la inclusión de código malicioso o el compromiso del sistema en general.",
        "answers": [
            {
                "text": "Los fallos de integridad del software y de los datos están relacionados con código e infraestructura no protegidos contra alteraciones (integridad)",
                "start": 0
            }
        ]
    },
    {
        "question": "Dame un ejemplo de Software and Data Integrity Failures.",
        "context": "Ejemplos de escenarios de ataque Escenario #1 Actualizaciones no firmadas: Muchos routers domésticos, decodificadores de televisión, firmware de dispositivos, entre otros, no verifican las firmas de sus actualizaciones de firmware. El firmware sin firmar es un objetivo creciente para los atacantes y se espera que empeore. Esto es una gran preocupación, ya que muchas veces no existe otro mecanismo para remediarlo que corregirlo en una versión futura y esperar a que las versiones anteriores caduquen.",
        "answers": [
            {
                "text": "Escenario #1 Actualizaciones no firmadas: Muchos routers domésticos, decodificadores de televisión, firmware de dispositivos, entre otros, no verifican las firmas de sus actualizaciones de firmware",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Qué causas tiene Software and Data Integrity Failures?",
        "context": "Descripción Los fallos de integridad del software y de los datos están relacionados con código e infraestructura no protegidos contra alteraciones (integridad). Ejemplos de esto son cuando una aplicación depende de plugins, bibliotecas o módulos de fuentes, repositorios o redes de entrega de contenidos (CDN) no confiables. Un pipeline CI/CD inseguro puede conducir a accesos no autorizados, la inclusión de código malicioso o el compromiso del sistema en general.",
        "answers": [
            {
                "text": "Los fallos de integridad del software y de los datos están relacionados con código e infraestructura no protegidos contra alteraciones (integridad)",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Qué es Security Logging and Monitoring Failures?",
        "context": "Descripción Volviendo al OWASP Top 10 2021, la intención es apoyar la detección, escalamiento y respuesta ante brechas activas. Sin registros y monitoreo, las brechas no pueden ser detectadas. Registros, detecciones, monitoreo y respuesta activas insuficientes pueden ocurrir en cualquier momento: Eventos auditables, tales como los inicios de sesión, fallas en el inicio de sesión y transacciones de alto valor no son registradas.",
        "answers": [
            {
                "text": "Volviendo al OWASP Top 10 2021, la intención es apoyar la detección, escalamiento y respuesta ante brechas activas",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Cómo prevenir Security Logging and Monitoring Failures?",
        "context": "Cómo se previene Los desarrolladores deberían implementar algunos o todos los siguientes controles, dependiendo del riesgo de la aplicación: Asegúrese de que todos los errores de inicio de sesión, de control de acceso y de validación de entradas de datos del lado del servidor se pueden registrar con suficiente contexto como para identificar cuentas sospechosas o maliciosas y mantenerlo durante el tiempo suficiente para permitir un posterior análisis forense.",
        "answers": [
            {
                "text": "Los desarrolladores deberían implementar algunos o todos los siguientes controles, dependiendo del riesgo de la aplicación: Asegúrese de que todos los errores de inicio de sesión, de control de acceso y de validación de entradas de datos del lado del servidor se pueden registrar con suficiente contexto como para identificar cuentas sospechosas o maliciosas y mantenerlo durante el tiempo suficiente para permitir un posterior análisis forense",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Qué impacto tiene Security Logging and Monitoring Failures en la seguridad?",
        "context": "Descripción Volviendo al OWASP Top 10 2021, la intención es apoyar la detección, escalamiento y respuesta ante brechas activas. Sin registros y monitoreo, las brechas no pueden ser detectadas. Registros, detecciones, monitoreo y respuesta activas insuficientes pueden ocurrir en cualquier momento: Eventos auditables, tales como los inicios de sesión, fallas en el inicio de sesión y transacciones de alto valor no son registradas.",
        "answers": [
            {
                "text": "Volviendo al OWASP Top 10 2021, la intención es apoyar la detección, escalamiento y respuesta ante brechas activas",
                "start": 0
            }
        ]
    },
    {
        "question": "Dame un ejemplo de Security Logging and Monitoring Failures.",
        "context": "Ejemplos de escenarios de ataque Escenario #1: El sitio web de un prestador de salud que provee un plan para niños no pudo detectar una brecha debido a la falta de monitoreo y registro. Alguien externo informó al prestador que un atacante había accedido y modificados registros médicos sensibles de más de 3,5 millones de niños. Una revisión post incidente detectó que los desarrolladores del sitio web no habían encontrado vulnerabilidades significativas.",
        "answers": [
            {
                "text": "Escenario #1: El sitio web de un prestador de salud que provee un plan para niños no pudo detectar una brecha debido a la falta de monitoreo y registro",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Qué causas tiene Security Logging and Monitoring Failures?",
        "context": "Descripción Volviendo al OWASP Top 10 2021, la intención es apoyar la detección, escalamiento y respuesta ante brechas activas. Sin registros y monitoreo, las brechas no pueden ser detectadas. Registros, detecciones, monitoreo y respuesta activas insuficientes pueden ocurrir en cualquier momento: Eventos auditables, tales como los inicios de sesión, fallas en el inicio de sesión y transacciones de alto valor no son registradas.",
        "answers": [
            {
                "text": "Volviendo al OWASP Top 10 2021, la intención es apoyar la detección, escalamiento y respuesta ante brechas activas",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Qué es Server Side Request Forgery (SSRF)?",
        "context": "Descripción Las fallas de SSRF ocurren cuando una aplicación web está obteniendo un recurso remoto sin validar la URL proporcionada por el usuario. Permite que un atacante coaccione a la aplicación para que envíe una solicitud falsificada a un destino inesperado, incluso cuando está protegido por un firewall, VPN u otro tipo de lista de control de acceso a la red (ACL).",
        "answers": [
            {
                "text": "Las fallas de SSRF ocurren cuando una aplicación web está obteniendo un recurso remoto sin validar la URL proporcionada por el usuario",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Cómo prevenir Server Side Request Forgery (SSRF)?",
        "context": "Cómo se previene Los desarrolladores pueden prevenir SSRF implementando algunos o todos los siguientes controles de defensa en profundidad: Desde la capa de red Segmente la funcionalidad de acceso a recursos remotos en redes separadas para reducir el impacto de SSRF Haga cumplir las políticas de firewall \"denegar por defecto\" o las reglas de control de acceso a la red para bloquear todo el tráfico de la intranet excepto el esencial.",
        "answers": [
            {
                "text": "Los desarrolladores pueden prevenir SSRF implementando algunos o todos los siguientes controles de defensa en profundidad: Desde la capa de red Segmente la funcionalidad de acceso a recursos remotos en redes separadas para reducir el impacto de SSRF Haga cumplir las políticas de firewall \"denegar por defecto\" o las reglas de control de acceso a la red para bloquear todo el tráfico de la intranet excepto el esencial",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Qué impacto tiene Server Side Request Forgery (SSRF) en la seguridad?",
        "context": "Descripción Las fallas de SSRF ocurren cuando una aplicación web está obteniendo un recurso remoto sin validar la URL proporcionada por el usuario. Permite que un atacante coaccione a la aplicación para que envíe una solicitud falsificada a un destino inesperado, incluso cuando está protegido por un firewall, VPN u otro tipo de lista de control de acceso a la red (ACL).",
        "answers": [
            {
                "text": "Las fallas de SSRF ocurren cuando una aplicación web está obteniendo un recurso remoto sin validar la URL proporcionada por el usuario",
                "start": 0
            }
        ]
    },
    {
        "question": "Dame un ejemplo de Server Side Request Forgery (SSRF).",
        "context": "Ejemplos de escenarios de ataque Los atacantes pueden usar SSRF para atacar sistemas protegidos detrás de firewalls de aplicaciones web, firewalls o ACLs de red, utilizando escenarios tales como: Escenario #1: Escaneo de puertos de servidores internos – Si la arquitectura de red no se encuentra segmentada, los atacantes pueden trazar un mapa de las redes internas y determinar si los puertos están abiertos o cerrados en los servidores internos a partir de los resultados de la conexión o del tiempo transcurrido.",
        "answers": [
            {
                "text": "Los atacantes pueden usar SSRF para atacar sistemas protegidos detrás de firewalls de aplicaciones web, firewalls o ACLs de red, utilizando escenarios tales como: Escenario #1: Escaneo de puertos de servidores internos – Si la arquitectura de red no se encuentra segmentada, los atacantes pueden trazar un mapa de las redes internas y determinar si los puertos están abiertos o cerrados en los servidores internos a partir de los resultados de la conexión o del tiempo transcurrido.",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Qué causas tiene Server Side Request Forgery (SSRF)?",
        "context": "Descripción Las fallas de SSRF ocurren cuando una aplicación web está obteniendo un recurso remoto sin validar la URL proporcionada por el usuario. Permite que un atacante coaccione a la aplicación para que envíe una solicitud falsificada a un destino inesperado, incluso cuando está protegido por un firewall, VPN u otro tipo de lista de control de acceso a la red (ACL).",
        "answers": [
            {
                "text": "Las fallas de SSRF ocurren cuando una aplicación web está obteniendo un recurso remoto sin validar la URL proporcionada por el usuario",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Qué es Next Steps?",
        "context": "Errores de administración de memoria | CWEs mapeadas | Tasa de incidencia máx | Tasa de incidencia prom | Explotabilidad ponderada prom | Impacto ponderado prom | Cobertura máx | Cobertura prom | Incidencias totales | Total CVEs | |:-------------:|:--------------------:|:--------------------:|:--------------:|:--------------:|:----------------------:|:---------------------:|:-------------------:|:------------:| | 14 | 7.03% | 1.16% | 6.7 | 8.1 | 56.06% | 31.74% | 26576 | 16184 | Descripción.",
        "answers": [
            {
                "text": "Errores de administración de memoria | CWEs mapeadas | Tasa de incidencia máx | Tasa de incidencia prom | Explotabilidad ponderada prom | Impacto ponderado prom | Cobertura máx | Cobertura prom | Incidencias totales | Total CVEs | |:-------------:|:--------------------:|:--------------------:|:--------------:|:--------------:|:----------------------:|:---------------------:|:-------------------:|:------------:| | 14 | 7",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Cómo prevenir Next Steps?",
        "context": "Errores de administración de memoria | CWEs mapeadas | Tasa de incidencia máx | Tasa de incidencia prom | Explotabilidad ponderada prom | Impacto ponderado prom | Cobertura máx | Cobertura prom | Incidencias totales | Total CVEs | |:-------------:|:--------------------:|:--------------------:|:--------------:|:--------------:|:----------------------:|:---------------------:|:-------------------:|:------------:| | 14 | 7.03% | 1.16% | 6.7 | 8.1 | 56.06% | 31.74% | 26576 | 16184 | Descripción.",
        "answers": [
            {
                "text": "Errores de administración de memoria | CWEs mapeadas | Tasa de incidencia máx | Tasa de incidencia prom | Explotabilidad ponderada prom | Impacto ponderado prom | Cobertura máx | Cobertura prom | Incidencias totales | Total CVEs | |:-------------:|:--------------------:|:--------------------:|:--------------:|:--------------:|:----------------------:|:---------------------:|:-------------------:|:------------:| | 14 | 7",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Qué impacto tiene Next Steps en la seguridad?",
        "context": "Errores de administración de memoria | CWEs mapeadas | Tasa de incidencia máx | Tasa de incidencia prom | Explotabilidad ponderada prom | Impacto ponderado prom | Cobertura máx | Cobertura prom | Incidencias totales | Total CVEs | |:-------------:|:--------------------:|:--------------------:|:--------------:|:--------------:|:----------------------:|:---------------------:|:-------------------:|:------------:| | 14 | 7.03% | 1.16% | 6.7 | 8.1 | 56.06% | 31.74% | 26576 | 16184 | Descripción.",
        "answers": [
            {
                "text": "Errores de administración de memoria | CWEs mapeadas | Tasa de incidencia máx | Tasa de incidencia prom | Explotabilidad ponderada prom | Impacto ponderado prom | Cobertura máx | Cobertura prom | Incidencias totales | Total CVEs | |:-------------:|:--------------------:|:--------------------:|:--------------:|:--------------:|:----------------------:|:---------------------:|:-------------------:|:------------:| | 14 | 7",
                "start": 0
            }
        ]
    },
    {
        "question": "Dame un ejemplo de Next Steps.",
        "context": "Errores de administración de memoria | CWEs mapeadas | Tasa de incidencia máx | Tasa de incidencia prom | Explotabilidad ponderada prom | Impacto ponderado prom | Cobertura máx | Cobertura prom | Incidencias totales | Total CVEs | |:-------------:|:--------------------:|:--------------------:|:--------------:|:--------------:|:----------------------:|:---------------------:|:-------------------:|:------------:| | 14 | 7.03% | 1.16% | 6.7 | 8.1 | 56.06% | 31.74% | 26576 | 16184 | Descripción.",
        "answers": [
            {
                "text": "Errores de administración de memoria | CWEs mapeadas | Tasa de incidencia máx | Tasa de incidencia prom | Explotabilidad ponderada prom | Impacto ponderado prom | Cobertura máx | Cobertura prom | Incidencias totales | Total CVEs | |:-------------:|:--------------------:|:--------------------:|:--------------:|:--------------:|:----------------------:|:---------------------:|:-------------------:|:------------:| | 14 | 7",
                "start": 0
            }
        ]
    },
    {
        "question": "¿Qué causas tiene Next Steps?",
        "context": "Errores de administración de memoria | CWEs mapeadas | Tasa de incidencia máx | Tasa de incidencia prom | Explotabilidad ponderada prom | Impacto ponderado prom | Cobertura máx | Cobertura prom | Incidencias totales | Total CVEs | |:-------------:|:--------------------:|:--------------------:|:--------------:|:--------------:|:----------------------:|:---------------------:|:-------------------:|:------------:| | 14 | 7.03% | 1.16% | 6.7 | 8.1 | 56.06% | 31.74% | 26576 | 16184 | Descripción.",
        "answers": [
            {
                "text": "Errores de administración de memoria | CWEs mapeadas | Tasa de incidencia máx | Tasa de incidencia prom | Explotabilidad ponderada prom | Impacto ponderado prom | Cobertura máx | Cobertura prom | Incidencias totales | Total CVEs | |:-------------:|:--------------------:|:--------------------:|:--------------:|:--------------:|:----------------------:|:---------------------:|:-------------------:|:------------:| | 14 | 7",
                "start": 0
            }
        ]
    }
]